on:
  push:
    branches:
      - master
      - develop

env:
  ios-version: 13.0

jobs:
  # Android build job
  ####################
  build-android:
    strategy:
      matrix:
        arch: ['arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64']
    name: Android ${{ matrix.arch }}
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Apply patch
        run: |
          cd 3rdparty/tensorflow && git apply ../../fix.patch

      - name: Build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE="$ANDROID_HOME"/ndk/25.2.9519653/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI="${{ matrix.arch }}" \
                -DANDROID_PLATFORM=android-26 \
                -B"build" \
                $(test "${{ matrix.arch }}" = "armeabi-v7a" && echo "-DTFLITE_ENABLE_XNNPACK=OFF") \
                .
          
          cmake --build build --target tfcv --config Release -j4
          
          mkdir -p out/lib/android/jniLibs/${{ matrix.arch }}
          cp build/lib/libtfcv.so out/lib/android/jniLibs/${{ matrix.arch }}

      - name: Upload
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: Android-${{ matrix.arch }}-${{ github.run_number }}
          path: out/lib

  # iOS build job
  #################
  build-ios:
    strategy:
      matrix:
        platform: [ 'OS', 'SIMULATOR' ]

    name: iOS ${{ matrix.platform }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Apply patch
        run: |
          cd 3rdparty/tensorflow && git apply ../../fix.patch

      - name: Build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE=./cmake/modules/iOS.cmake -DIOS_PLATFORM=${{ matrix.platform }} -DIOS_DEPLOYMENT_TARGET=${{ env.ios-version }} -H. -Bbuild -GXcode
          cmake --build build --config Release -j3

      - name: Upload
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: iOS-${{ matrix.platform }}
          path: build/lib/Release/

  # Create artifact from partial builds
  ######################################
  pack:
    needs: [build-android, build-ios]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

        # Download Android artifacts
      - uses: actions/download-artifact@v4
        with:
          path: build/lib
          pattern: 'Android-*'
          merge-multiple: true

        # Download iOS artifacts
      - uses: actions/download-artifact@v4
        with:
          path: intermediate/lib
          pattern: 'iOS-*'

      - name: Merge iOS Os & Simulator libraries
        run: |
          mkdir -p build/lib/ios
          libtool -static -o build/lib/ios/libtfcv.a intermediate/lib/**/*.a

      - run: |
          mkdir -p build/include
          cp -r include build/

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Multiplatform
          path: build/