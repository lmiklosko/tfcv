on:
  push:
    branches:
      - master
      - develop

jobs:
  build:
    strategy:
      matrix:
        arch: ['arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64']
    name: Android ${{ matrix.arch }}
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact_id }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Apply patch
        run: |
          cd 3rdparty/tensorflow && git apply ../../fix.patch

      - name: Build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE="$ANDROID_HOME"/ndk/25.2.9519653/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI="$arch" \
                -DANDROID_PLATFORM=android-26 \
                -B"build" \
                $(test "$arch" = "armeabi-v7a" && echo "-DTFLITE_ENABLE_XNNPACK=OFF") \
                .
          
          cmake --build build --target tfcv --config Release -j 2
          
          mkdir -p build/lib/jniLibs/${{ matrix.arch }}
          cp build/lib/libtfcv.so build/lib/jniLibs/${{ matrix.arch }}

      - name: Upload
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: Android-${{ matrix.arch }}-${{ github.run_number }}
          path: build/lib

  pack:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions/download-artifact@v4
        with:
          path: build/lib
          pattern: 'Android-*'
          merge-multiple: true

      - run: |
          mkdir -p build/include
          cp -r include build/include

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Android
          path: build/