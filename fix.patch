diff --git a/tensorflow/lite/CMakeLists.txt b/tensorflow/lite/CMakeLists.txt
index a61f537365a..7817c545d1f 100644
--- a/tensorflow/lite/CMakeLists.txt
+++ b/tensorflow/lite/CMakeLists.txt
@@ -286,6 +286,8 @@ populate_tflite_source_vars("core/kernels" TFLITE_CORE_KERNELS_SRCS)
 populate_tflite_source_vars("core/tools" TFLITE_CORE_TOOLS_SRCS)
 populate_tflite_source_vars("c" TFLITE_C_SRCS)
 populate_tflite_source_vars("delegates" TFLITE_DELEGATES_SRCS)
+populate_tflite_source_vars("delegates/utils" TFLITE_DELEGATES_UTILS_SRCS)
+populate_tflite_source_vars("async" TFLITE_ASYNC_SRCS)
 if(TFLITE_ENABLE_GPU)
   find_package(opencl_headers REQUIRED)
   find_package(vulkan_headers REQUIRED)
@@ -368,6 +370,14 @@ if(TFLITE_ENABLE_GPU)
     ${TFLITE_DELEGATES_GPU_COMMON_TRANSFORMATIONS_SRCS}
     ${TFLITE_SOURCE_DIR}/tools/versioning/gpu_compatibility.cc
     ${TFLITE_SOURCE_DIR}/tools/versioning/op_signature.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/async_buffers.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/android_hardware_buffer.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/android_sync.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/gl_errors.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/egl_environment.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/egl_context.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/egl_surface.cc
+    ${TFLITE_SOURCE_DIR}/delegates/gpu/gl/request_gpu_info.cc
   )
   include_directories(
     AFTER
@@ -622,6 +632,8 @@ set(_ALL_TFLITE_SRCS
   ${TFLITE_SOURCE_DIR}/schema/conversion_metadata_generated.h
   ${TFLITE_SOURCE_DIR}/schema/schema_utils.cc
   ${TFLITE_SOURCE_DIR}/schema/schema_generated.h
+  ${TFLITE_DELEGATES_UTILS_SRCS}
+  ${TFLITE_ASYNC_SRCS}
 )
 add_library(tensorflow-lite
   ${_ALL_TFLITE_SRCS}
diff --git a/tensorflow/lite/profiling/platform_profiler.cc b/tensorflow/lite/profiling/platform_profiler.cc
index acaef4b17a6..7b43aaee5bd 100644
--- a/tensorflow/lite/profiling/platform_profiler.cc
+++ b/tensorflow/lite/profiling/platform_profiler.cc
@@ -23,7 +23,7 @@ limitations under the License.
 #elif defined(__APPLE__)
 #include "TargetConditionals.h"
 #if TARGET_OS_IOS
-#define SIGNPOST_PLATFORM_PROFILER
+//#define SIGNPOST_PLATFORM_PROFILER
 #include "tensorflow/lite/profiling/signpost_profiler.h"
 #endif
 #elif defined(ENABLE_TFLITE_PERFETTO_PROFILER)
