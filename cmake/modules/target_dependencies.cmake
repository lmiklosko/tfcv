function(collect_dependencies input_target)
    set(_input_link_libraries LINK_LIBRARIES)
    get_target_property(_input_type ${input_target} TYPE)
    if (${_input_type} STREQUAL "INTERFACE_LIBRARY")
        set(_input_link_libraries INTERFACE_LINK_LIBRARIES)
    endif()
    get_target_property(public_dependencies ${input_target} ${_input_link_libraries})
    foreach(dependency IN LISTS public_dependencies)
        if(TARGET ${dependency})
            get_target_property(alias ${dependency} ALIASED_TARGET)
            if (TARGET ${alias})
                set(dependency ${alias})
            endif()
            get_target_property(_type ${dependency} TYPE)
            if (${_type} STREQUAL "STATIC_LIBRARY")
                list(APPEND static_libs ${dependency})
            endif()

            get_property(library_already_added
                    GLOBAL PROPERTY _${tgt_name}_static_bundle_${dependency})
            if (NOT library_already_added)
                set_property(GLOBAL PROPERTY _${tgt_name}_static_bundle_${dependency} ON)
                collect_dependencies(${dependency})
            endif()
        endif()
    endforeach()

    list(REMOVE_DUPLICATES static_libs)
    set(static_libs ${static_libs} PARENT_SCOPE)
endfunction()